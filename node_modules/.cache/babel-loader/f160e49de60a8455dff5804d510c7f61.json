{"ast":null,"code":"var _jsxFileName = \"/Users/mac/bootcamp/react-portfolio/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../utils/helpers';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'name') {\n      setName(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault(); // First we check to see if the email is not valid\n\n    if (!validateEmail(email)) {\n      setErrorMessage('Email is invalid'); // We want to exit out of this code block if something is wrong so that the user can correct it\n\n      return;\n    } // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n\n    setName('');\n    setMessage('');\n    setEmail('');\n    setErrorMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send Me a Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          name: \"name\",\n          onChange: handleInputChange,\n          type: \"text\",\n          placeholder: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          name: \"email\",\n          onChange: handleInputChange,\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: message,\n          name: \"message\",\n          onChange: handleInputChange,\n          type: \"text\",\n          placeholder: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"bU6RkskOt7Up89GqlVAWpEK/p18=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","validateEmail","Form","email","setEmail","name","setName","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","inputValue","value","handleFormSubmit","preventDefault"],"sources":["/Users/mac/bootcamp/react-portfolio/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { validateEmail } from '../utils/helpers';\nimport '../index.css';\n\n function Form() {\n    // Create state variables for the fields in the form\n    // We are also setting their initial values to an empty string\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [message, setMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n  \n    const handleInputChange = (e) => {\n      // Getting the value and name of the input which triggered the change\n      const { target } = e;\n      const inputType = target.name;\n      const inputValue = target.value;\n  \n      // Based on the input type, we set the state of either email, username, and password\n      if (inputType === 'email') {\n        setEmail(inputValue);\n      } else if (inputType === 'name') {\n        setName(inputValue);\n      } else {\n        setMessage(inputValue);\n      }\n    };\n  \n    const handleFormSubmit = (e) => {\n      // Preventing the default behavior of the form submit (which is to refresh the page)\n      e.preventDefault();\n  \n      // First we check to see if the email is not valid\n      if (!validateEmail(email)) {\n        setErrorMessage('Email is invalid');\n        // We want to exit out of this code block if something is wrong so that the user can correct it\n        return;\n  \n      }\n  \n      \n  \n      // If everything goes according to plan, we want to clear out the input after a successful registration.\n      setName('');\n      setMessage('');\n      setEmail('');\n      setErrorMessage('');\n    };\n\n    return (\n        <section className=\"form\">\n        <div className=\"row\">\n        <h2>Send Me a Message</h2>\n        <form className=\"form\">\n        <input\n            value={name}\n            name=\"name\"\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder=\"name\"\n          />\n          <input\n            value={email}\n            name=\"email\"\n            onChange={handleInputChange}\n            type=\"email\"\n            placeholder=\"email\"\n          />\n          <input\n            value={message}\n            name=\"message\"\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder=\"message\"\n          />\n          <button type=\"button\" onClick={handleFormSubmit}>Submit</button>\n        </form>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n      </div>\n      </section>\n    );\n}\n\nexport default Form;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,cAAP;;;AAEC,SAASC,IAAT,GAAgB;EAAA;;EACb;EACA;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMW,iBAAiB,GAAIC,CAAD,IAAO;IAC/B;IACA,MAAM;MAAEC;IAAF,IAAaD,CAAnB;IACA,MAAME,SAAS,GAAGD,MAAM,CAACR,IAAzB;IACA,MAAMU,UAAU,GAAGF,MAAM,CAACG,KAA1B,CAJ+B,CAM/B;;IACA,IAAIF,SAAS,KAAK,OAAlB,EAA2B;MACzBV,QAAQ,CAACW,UAAD,CAAR;IACD,CAFD,MAEO,IAAID,SAAS,KAAK,MAAlB,EAA0B;MAC/BR,OAAO,CAACS,UAAD,CAAP;IACD,CAFM,MAEA;MACLP,UAAU,CAACO,UAAD,CAAV;IACD;EACF,CAdD;;EAgBA,MAAME,gBAAgB,GAAIL,CAAD,IAAO;IAC9B;IACAA,CAAC,CAACM,cAAF,GAF8B,CAI9B;;IACA,IAAI,CAACjB,aAAa,CAACE,KAAD,CAAlB,EAA2B;MACzBO,eAAe,CAAC,kBAAD,CAAf,CADyB,CAEzB;;MACA;IAED,CAV6B,CAc9B;;;IACAJ,OAAO,CAAC,EAAD,CAAP;IACAE,UAAU,CAAC,EAAD,CAAV;IACAJ,QAAQ,CAAC,EAAD,CAAR;IACAM,eAAe,CAAC,EAAD,CAAf;EACD,CAnBD;;EAqBA,oBACI;IAAS,SAAS,EAAC,MAAnB;IAAA,uBACA;MAAK,SAAS,EAAC,KAAf;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAM,SAAS,EAAC,MAAhB;QAAA,wBACA;UACI,KAAK,EAAEL,IADX;UAEI,IAAI,EAAC,MAFT;UAGI,QAAQ,EAAEM,iBAHd;UAII,IAAI,EAAC,MAJT;UAKI,WAAW,EAAC;QALhB;UAAA;UAAA;UAAA;QAAA,QADA,eAQE;UACE,KAAK,EAAER,KADT;UAEE,IAAI,EAAC,OAFP;UAGE,QAAQ,EAAEQ,iBAHZ;UAIE,IAAI,EAAC,OAJP;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QARF,eAeE;UACE,KAAK,EAAEJ,OADT;UAEE,IAAI,EAAC,SAFP;UAGE,QAAQ,EAAEI,iBAHZ;UAIE,IAAI,EAAC,MAJP;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QAfF,eAsBE;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEM,gBAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAtBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,EA0BCR,YAAY,iBACX;QAAA,uBACE;UAAG,SAAS,EAAC,YAAb;UAAA,UAA2BA;QAA3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoCH;;GAjFSP,I;;KAAAA,I;AAmFV,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}